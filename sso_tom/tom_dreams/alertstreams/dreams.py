# Copyright (c) 2024 Jamie Soon
#
# This file is part of TOM Toolkit/SSO-Alert
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

import io
import logging

import fastavro
from tom_targets.models import Target

from .avro_alert import AvroAlert
from .kafka_alertstream import KafkaAlertStream

logger = logging.getLogger(__name__)


class DREAMSAlertStream(KafkaAlertStream):
    """Poll alerts from a stream generated by DREAMS"""

    required_keys = ["config"]
    allowed_keys = ["config", "topic_handlers"]

    def __init__(self, *args, **kwargs) -> None:
        super().__init__(*args, **kwargs)


class DREAMSAvroAlert(AvroAlert):
    def __init__(self, *args, **kwargs) -> None:
        super().__init__(*args, **kwargs)

    def process_message(self, msg):
        """Process an avro message from DREAMS.
        For some reason using "objectid" instead of "objectID"

        :param confluent_kafka.Message msg: Object containing message information
        :return Target target: tom_toolkit Target class.
        """
        self.set_group_access(msg=msg)

        reader = fastavro.reader(io.BytesIO(msg.value()))
        schema = reader.schema

        # fastavro.reader returns an iterator?
        for record in reader:
            mytarget = Target(
                name=record["objectid"],
                type="SIDEREAL",
                ra=record["candidate"]["ra"],
                dec=record["candidate"]["dec"],
                epoch=record["candidate"]["jd"],
            )

        return mytarget


def alert_logger(alert):
    avro_alert = DREAMSAvroAlert()
    avro_alert.alert_logger(alert)
